{"version":3,"sources":["importNote.js","App.js","reportWebVitals.js","index.js"],"names":["savedNotes","props","state","notes","important","accountExists","loginError","signupError","options","importantOptions","editableNote","active","c_name","console","log","jwtToken","c_arr","document","cookie","split","forEach","val","token","decodeURI","this","length","id","style","textAlign","marginTop","fetch","method","headers","getCookie","then","results","status","json","setState","reverse","className","onClick","e","preventDefault","src","alt","c","replace","Date","toUTCString","map","_id","response","render","title","body","err","importants","catch","rows","columns","getElementById","value","note","reqBody","formurlencoded","inputNote","concat","error","notification","contentEditable","suppressContentEditableWarning","firstChild","innerText","nextSibling","result","type","placeholder","username","password","Cookies","set","event","firstName","lastName","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a5c6d3b2.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport './App.css'\r\nimport React from 'react';\r\nimport formurlencoded from 'form-urlencoded'\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass savedNotes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    state = {\r\n        notes: [],\r\n        important: [],\r\n        accountExists: true,\r\n        loginError: null,\r\n        signupError: null,\r\n        options: null,\r\n        importantOptions: null,\r\n        editableNote: null,\r\n        active: 'home'\r\n    }\r\n    getCookie(c_name) {\r\n        console.log(c_name);\r\n        var c_arr = document.cookie.split(';');\r\n        var jwtToken\r\n        console.log(c_arr)\r\n        c_arr.forEach((val) => {\r\n            if (c_name == val.split('=')[0]) {\r\n                var token = val.split('=')[1];\r\n                jwtToken = token\r\n            }\r\n        })\r\n        return decodeURI(jwtToken);\r\n    }\r\n    important() {\r\n        if (this.state.important.length === 0) {\r\n            return (<p id=\"invalidCredentials\" style={{ textAlign: 'center', marginTop: '100px' }}>You have not marked any note as important. Mark them to see here</p>)\r\n        }\r\n    }\r\n    notification() {\r\n\r\n        if (this.state.notes.length == 0) {\r\n            return (<p id=\"notification\">You have not saved any notes. Save them to see here</p>)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://3.142.94.241:3100/savenote', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'text/plain',\r\n                'authorization': this.getCookie(\"token\")\r\n            },\r\n\r\n        }).then((results) => {\r\n            if (results.status != 200) {\r\n                console.log(results)\r\n                this.setState({ notes: null })\r\n\r\n            }\r\n            else {\r\n                return results.json().then((notes) => {\r\n                    if (notes) {\r\n                        this.setState({ notes: notes.reverse() })\r\n                    }\r\n                })\r\n            }\r\n        })}\r\n        render() {\r\n            if (this.state.active == \"important\" && this.state.important != null && this.state.notes != null) return (\r\n                <div className=\"App\">\r\n                    <nav >\r\n                        <div className=\"navContent\" id=\"appName\" onClick={(e) => {e.preventDefault(); this.setState({ active: 'home' }) }}>\r\n                            Notes\r\n                        </div>\r\n                        <div className=\"navContent\" id=\"importantNav\" onClick={(e) => {e.preventDefault(); this.setState({ active: 'important' }) }}>\r\n                            Importants\r\n                        </div>\r\n                        <img src=\"/download.png\" alt=\"logout\" id=\"logoutButton\" onClick={(e) => {e.preventDefault();\r\n                            document.cookie.split(\";\").forEach(function (c) { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\r\n                            this.setState({ notes: null })\r\n                        }} />\r\n                    </nav>\r\n                    {this.important()}\r\n                    <div id=\"important\">{\r\n                        this.state.important.map((notes) => {\r\n                            if (notes._id === this.state.importantOptions) {\r\n                                return (\r\n                                    <div key={notes._id} id={notes._id} className=\"Notes\" >\r\n                                        <div className=\"rightCorner\">\r\n                                            <div id=\"options\">\r\n                                                <button onClick={(e) => {e.preventDefault();\r\n                                                    fetch(`http://3.142.94.241:3100/savenote/${notes._id}/important`, {\r\n                                                        method: 'DELETE',\r\n                                                        headers: {\r\n                                                            'Content-Type': 'text/plain',\r\n                                                            'authorization': this.getCookie(\"token\")\r\n                                                        }\r\n\r\n                                                    }).then((response) => {\r\n                                                        if (response.status == 200 || response.status == 304) {\r\n                                                            response.json().then((important) => { this.setState({ important: important }) })\r\n                                                        }\r\n                                                        else render(<p>error</p>)\r\n                                                    })\r\n                                                }}>remove</button>\r\n                                            </div>\r\n                                            <img src='/download1.png' className=\"threeDots\" onClick={(e) => {e.preventDefault(); this.setState({ importantOptions: null }) }} />\r\n                                        </div>\r\n                                        <div className=\"noteTitle \">{notes.title}</div>\r\n                                        <div className=\"noteBody\" >{notes.body}</div>\r\n                                    </div>)\r\n                            }\r\n\r\n                            else {\r\n                                return (<div key={notes._id} id={notes._id} className=\"Notes\">\r\n                                    <div className=\"rightCorner\">\r\n                                        <img src='/download1.png' className=\"threeDots\" onClick={(e) => {e.preventDefault();\r\n                                            this.setState({ importantOptions: notes._id })\r\n                                        }} />\r\n                                    </div>\r\n                                    <div className=\"noteTitle\">{notes.title}</div>\r\n                                    <div className=\"noteBody\">{notes.body}</div>\r\n                                </div>)\r\n                            }\r\n                        })}</div>\r\n                </div >\r\n            )\r\n            else if (this.state.notes != null && this.state.active == 'home') return (\r\n                <div className=\"App\" >\r\n                    <nav >\r\n                        <div className=\"navContent\" id=\"appName\" onClick={(e) => {e.preventDefault(); this.setState({ active: 'home' }) }}>\r\n                            Notes\r\n                        </div>\r\n                        <div className=\"navContent\" id=\"importantNav\" onClick={(e) => {e.preventDefault();\r\n                            this.setState({ active: 'important', options: null, editableNote: null })\r\n                            if (this.state.important.length === 0) {\r\n                                fetch(`http://3.142.94.241:3100/savenote/important/`, {\r\n                                    method: 'GET',\r\n                                    headers: {\r\n                                        'content-type': 'text/plain',\r\n                                        'authorization': this.getCookie(\"token\")\r\n                                    }\r\n                                }).then((response) => {\r\n                                    if (response.status != 200 && response.status != 304) {\r\n                                        console.log('Error')\r\n                                        return { err: \"error\" }\r\n                                    }\r\n                                    else {\r\n                                        return response.json()\r\n                                    }\r\n                                }).then((importants) => {\r\n                                    this.setState({ important: importants })\r\n                                }).catch(() => { this.setState({ active: 'home' }) })\r\n                            }\r\n                        }}>\r\n                            Importants\r\n                        </div>\r\n                        <img src=\"/download.png\" alt=\"logout\" id=\"logoutButton\" onClick={(e) => {e.preventDefault();\r\n                            document.cookie.split(\";\").forEach(function (c) { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\r\n                            this.setState({ notes: null })\r\n                        }} />\r\n                    </nav>\r\n                    <div onClick={(e) => {e.preventDefault(); this.setState({ editableNote: null }) }}>\r\n                        <div className=\"addNote\" id=\"title\">\r\n                            <h2 id=\"title\">Add Title</h2>\r\n                            <textarea id=\"addTitle\" rows=\"2\" columns=\"5\" />\r\n                        </div>\r\n                        <div className=\"addNote\" id=\"title\">\r\n                            <h3 id=\"Body\">Add Note</h3>\r\n                            <textarea id=\"addNote\" rows=\"15\" columns=\"5\" />\r\n                        </div>\r\n                        <button id=\"saveButton\" className=\"addNote\" onClick={(e) => {e.preventDefault();\r\n                            var title = document.getElementById('addTitle').value;\r\n                            var note = document.getElementById('addNote').value;\r\n                            document.getElementById('addTitle').value = '';\r\n                            document.getElementById('addNote').value = '';\r\n                            const reqBody = {\r\n                                title: title,\r\n                                body: note\r\n                            }\r\n                            fetch('http://3.142.94.241:3100/savenote/', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                                    'authorization': this.getCookie(\"token\")\r\n                                },\r\n                                body: formurlencoded(reqBody)\r\n                            }).then((inputNote) => {\r\n                                if (inputNote.status === 200) {\r\n                                    return inputNote.json()\r\n                                }\r\n                            }).then((response) => {\r\n                                this.setState({ notes: this.state.notes.reverse().concat(response).reverse() })\r\n                            }\r\n                            ).catch((error) => {\r\n                                console.log(error);\r\n                            })\r\n                        }} >Save</button>\r\n                    </div>\r\n                    <h2 id=\"YourNotes\">Your Notes</h2>\r\n                    {this.notification()}\r\n                    <div id=\"savedNotes\">\r\n                        {\r\n                            this.state.notes.map((notes) => {\r\n                                if (notes._id == this.state.editableNote) {\r\n                                    return (\r\n\r\n                                        <div key={notes._id} id={notes._id} className=\"editableNotes\" >\r\n                                            <div className=\"noteTitle editable\" contentEditable='true' suppressContentEditableWarning={true}>{notes.title}</div>\r\n                                            <div className=\"noteBody editable\" contentEditable='true' suppressContentEditableWarning={true}>{notes.body}</div>\r\n\r\n                                            <div id='buttons'>\r\n                                                <button className=\"deleteButton\"\r\n                                                    onClick={(e) => {\r\n                                                        // var _id = e.currentTarget.parentElement.getAttribute('id');\r\n                                                        var reqBody = {\r\n                                                            title: document.getElementById(notes._id).firstChild.innerText,\r\n                                                            body: document.getElementById(notes._id).firstChild.nextSibling.innerText\r\n                                                        }\r\n                                                        console.log(reqBody)\r\n                                                        fetch(`http://3.142.94.241:3100/savenote/${notes._id}`, {\r\n                                                            method: 'PUT',\r\n                                                            headers: {\r\n                                                                'authorization': this.getCookie(\"token\"),\r\n                                                                'content-type': 'application/x-www-form-urlencoded'\r\n                                                            },\r\n                                                            body: formurlencoded(reqBody)\r\n                                                        }).then((result) => {\r\n                                                            if (result.status != 200) {\r\n                                                                render(<div>error</div>);\r\n                                                            }\r\n                                                            else { return result.json() }\r\n                                                        }).then((result) => {\r\n                                                            this.setState({ notes: result.reverse(), editableNote: null })\r\n                                                        }).catch((err) => { console.log(err) })\r\n                                                    }}>\r\n                                                    Save</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                else if (this.state.options == notes._id) {\r\n                                    return (\r\n                                        <div key={notes._id} id={notes._id} className=\"Notes\" >\r\n                                            <div className=\"rightCorner\">\r\n                                                <div id=\"options\">\r\n                                                    <button onClick={(e) => {\r\n                                                        this.setState({ editableNote: null, options: null })\r\n                                                        fetch(`http://3.142.94.241:3100/savenote/${notes._id}`, {\r\n                                                            method: 'DELETE',\r\n                                                            headers: {\r\n                                                                'authorization': this.getCookie(\"token\"),\r\n                                                                'content-type': 'text/plain'\r\n                                                            }\r\n                                                        }).then((result) => {\r\n                                                            if (result.status !== 200) {\r\n                                                                result.json().then((err) => { console.log(err) })\r\n                                                            }\r\n                                                            else {\r\n                                                                result.json().then((result) => { this.setState({ notes: result }) })\r\n\r\n                                                            }\r\n                                                        })\r\n                                                    }}>delete</button>\r\n                                                    <button onClick={(e) => {e.preventDefault(); this.setState({ editableNote: notes._id, options: null }) }}>edit</button>\r\n                                                    <button onClick={(e) => {e.preventDefault();\r\n                                                        fetch(`http://3.142.94.241:3100/savenote/${notes._id}/important`, {\r\n                                                            method: 'POST',\r\n                                                            headers: {\r\n                                                                'Content-Type': 'text/plain',\r\n                                                                'authorization': this.getCookie(\"token\")\r\n                                                            },\r\n\r\n                                                        }).then((response) => { if (response.status == 200 || response.status == 304) { response.json().then((response) => { this.setState({ important: response, options: null }) }) } })\r\n                                                    }}>important</button>\r\n                                                </div>\r\n                                                <img src='/download1.png' className=\"threeDots\" onClick={(e) => {e.preventDefault();\r\n                                                    this.setState({ options: null })\r\n                                                }}></img>\r\n                                            </div>\r\n                                            <div className=\"noteTitle \">{notes.title}</div>\r\n                                            <div className=\"noteBody\" >{notes.body}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return (\r\n\r\n                                        <div key={notes._id} id={notes._id} className=\"Notes\">\r\n                                            <div className=\"rightCorner\">\r\n                                                <img src='/download1.png' className=\"threeDots\" onClick={(e) => {e.preventDefault();\r\n                                                    this.setState({ options: notes._id })\r\n                                                }}></img>\r\n                                            </div>\r\n                                            <div className=\"noteTitle\">{notes.title}</div>\r\n                                            <div className=\"noteBody\">{notes.body}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n            else {\r\n                if (this.state.accountExists) {\r\n                    return (\r\n                        <div id=\"loginDiv\">\r\n                            <form>\r\n                                <h1>Welcome To YourNote</h1>\r\n                                <p id='invalidCredentials'>{\r\n                                    this.state.loginError}</p>\r\n                                <h3>Username</h3>\r\n                                <input type=\"text\" placeholder=\"enter your username\" id=\"username\"></input>\r\n                                <br />\r\n                                <h3>Password</h3>\r\n                                <input type=\"password\" placeholder=\"enter your password\" id=\"password\"></input>\r\n                                <br />\r\n                                <button id=\"loginButton\" onClick={(e) => {e.preventDefault();\r\n                                    var reqBody = {\r\n                                        username: document.getElementById('username').value,\r\n                                        password: document.getElementById('password').value,\r\n                                    }\r\n                                    fetch('http://3.142.94.241:3100/users/login', {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/x-www-form-urlencoded'\r\n                                        },\r\n                                        body: formurlencoded(reqBody)\r\n                                    }).then((response) => {\r\n                                        if (response.status != 200) {\r\n                                            // this.setState({loginError:response.err})\r\n                                            return response.json()\r\n                                        }\r\n                                        else {\r\n                                            return response.json()\r\n                                        }\r\n                                    }).then((response) => {\r\n                                        console.log(response.err)\r\n                                        if (response.err) {\r\n                                            this.setState({ loginError: response.err })\r\n                                        }\r\n                                        else {\r\n                                            const cookies = new Cookies()\r\n                                            cookies.set('token', 'Bearer ' + response.token, 'http://3.142.94.241:3100/savenote');\r\n                                            fetch('http://3.142.94.241:3100/savenote', {\r\n                                                method: 'GET',\r\n                                                headers: {\r\n                                                    'Content-Type': 'text/plain',\r\n                                                    'authorization': this.getCookie(\"token\")\r\n                                                },\r\n\r\n                                            }).then((results) => {\r\n                                                if (results.status != 200) {\r\n                                                    console.log(results)\r\n                                                    this.setState({ notes: null })\r\n\r\n                                                }\r\n                                                else {\r\n                                                    return results.json()\r\n                                                }\r\n                                            }).then((notes) => {\r\n                                                this.setState({ notes: notes })\r\n                                            })\r\n                                        }\r\n                                    }).catch((error) => { console.log(error) });\r\n                                }}>Login</button>\r\n                                <p id=\"createAccountPara\">don't have an account, create one</p>\r\n\r\n                                <button id=\"signupButton\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.setState({ accountExists: false })\r\n                                }}>SignUp</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <div id=\"signupForm\">\r\n                            <form>\r\n                                <h1> Create a new account</h1>\r\n                                <p id=\"invalidCredentials\">{this.state.signupError}</p>\r\n                                <h3>Username</h3>\r\n                                <input type=\"text\" id=\"username\" placeholder=\"enter your username\"></input>\r\n                                <h3>Password</h3>\r\n                                <input type=\"password\" id=\"password\" placeholder=\"enter your password\"></input>\r\n                                <h3>First Name</h3>\r\n                                <input type=\"text\" id=\"FirstName\" placeholder=\"enter your First Name\"></input>\r\n                                <h3>Last Name</h3>\r\n                                <input type=\"text\" id=\"LastName\" placeholder=\"enter your Last Name\"></input>\r\n                                <br/>\r\n                                <button id=\"signupButton\" onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    var reqBody = {\r\n                                        username: document.getElementById('username').value,\r\n                                        password: document.getElementById('password').value,\r\n                                        firstName: document.getElementById('FirstName').value,\r\n                                        lastName: document.getElementById('LastName').value\r\n                                    }\r\n                                    fetch('http://3.142.94.241:3100/users', {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'content-type': 'application/x-www-form-urlencoded'\r\n                                        },\r\n                                        body: formurlencoded(reqBody)\r\n                                    }).then((response) => {\r\n                                        if (response.status != 200) {\r\n                                            response.json().then((err) => {\r\n                                                this.setState({ signupError: err.err })\r\n                                                console.log(err)\r\n                                            })\r\n                                        }\r\n                                        else {\r\n                                            return response.json()\r\n                                        }\r\n                                    }).then((response) => {\r\n                                        if (response) {\r\n                                            this.setState({ accountExists: true })\r\n                                            console.log(response)\r\n                                        }\r\n                                    })\r\n                                }}>Sign Up</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export default savedNotes","import ImportNotes from './importNote.js';\nimport { render, screen } from '@testing-library/react';\nimport './App.css';\nimport React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n      return (\n          <ImportNotes/>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}